options:
  logging: CLOUD_LOGGING_ONLY

steps:
# Step 1: Build Docker image
- name: 'gcr.io/cloud-builders/docker'
  args:
    [
      'build',
      '-t', 'us-central1-docker.pkg.dev/singular-object-464504-a3/artifact-repo/static-web:$BUILD_ID',
      '.'
    ]

# Step 2: Push Docker image
- name: 'gcr.io/cloud-builders/docker'
  args:
    [
      'push',
      'us-central1-docker.pkg.dev/singular-object-464504-a3/artifact-repo/static-web:$BUILD_ID'
    ]

# Step 3: Create instance template
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      echo "Creating instance template web-template-$BUILD_ID..."
      gcloud beta compute instance-templates create-with-container web-template-$BUILD_ID \
        --machine-type=e2-small \
        --container-image=us-central1-docker.pkg.dev/singular-object-464504-a3/artifact-repo/static-web:$BUILD_ID \
        --tags=http-server \
        --quiet

# Step 4: Blue-Green deployment
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      GREEN_MIG="web-green-$BUILD_ID"
      OLD_MIG="web-1-mig"
      LB_BACKEND="web-lb-backend"
      ZONE="us-central1-a"

      echo "Creating Green MIG $GREEN_MIG..."
      gcloud compute instance-groups managed create "$GREEN_MIG" \
          --base-instance-name web \
          --size 2 \
          --template web-template-$BUILD_ID \
          --zone $ZONE \
          --health-check web-mig-hc \
          --initial-delay 30 \
          --quiet

      echo "Waiting for all Green MIG instances to be RUNNING and HEALTHY..."
      while true; do
          STATUS=$(gcloud compute instance-groups managed list-instances "$GREEN_MIG" \
                    --zone $ZONE \
                    --format="value(status,instance,version.instanceTemplate)" | grep -v TERMINATED)
          ALL_HEALTHY=true
          while read -r line; do
              STATE=$(echo $line | awk '{print $1}')
              if [ "$STATE" != "RUNNING" ]; then
                  ALL_HEALTHY=false
                  break
              fi
          done <<< "$STATUS"
          if [ "$ALL_HEALTHY" = true ]; then
              echo "All instances are RUNNING."
              break
          fi
          echo "Waiting 10s..."
          sleep 10
      done

      echo "Switching LB backend to Green MIG only..."
      gcloud compute backend-services update "$LB_BACKEND" \
          --global \
          --instance-group "$GREEN_MIG" \
          --instance-group-zone $ZONE \
          --quiet

      echo "Removing old MIG from LB..."
      gcloud compute backend-services update "$LB_BACKEND" \
          --global \
          --remove-instance-groups "$OLD_MIG" \
          --instance-group-zone $ZONE \
          --quiet

      echo "Deleting old MIG $OLD_MIG..."
      gcloud compute instance-groups managed delete "$OLD_MIG" \
          --zone $ZONE \
          --quiet

images:
  - 'us-central1-docker.pkg.dev/singular-object-464504-a3/artifact-repo/static-web:$BUILD_ID'
